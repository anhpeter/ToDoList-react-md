{"version":3,"sources":["reportWebVitals.js","to_do_list/components/toolbar.component/toolbar.component.js","to_do_list/shared/helpers/Helper.js","to_do_list/components/task.component/task.component.js","to_do_list/components/task_list.component/task_list.component.js","to_do_list/components/form.component/form.component.js","to_do_list/components/title.component/title.component.js","to_do_list/shared/defines/demo.js","to_do_list/main.component.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ToolbarComponent","props","onSearchChange","$event","clearTimeout","state","searchTimeout","value","target","toolbarParams","search","setState","onToolbarParamsChange","onFilterChange","filter","status","onSortChange","getEmptyParams","sort","className","disabled","this","isFormOpening","onClick","onAddTaskClick","type","onChange","placeholder","name","Component","Helper","button","active","classes","content","hidden","alert","min","Math","floor","random","TaskComponent","getTaskTitle","title","task","searchContent","replace","RegExp","getTemplate","scope","no","dangerouslySetInnerHTML","__html","onTaskStatusChange","getStatusTemplate","onEditTaskClick","onDeleteTaskClick","TaskListComponent","taskArr","map","index","id","colSpan","width","length","getTaskArrHtml","getEmptyMsg","FormComponent","getFormValues","formType","getEmptyForm","onInputChange","inputName","inputValue","form","onSubmit","preventDefault","isFormValid","generateId","onAddTask","onEditTask","formValues","trim","includes","e","onFormCancelClick","TitleComponent","axios","get","res","console","log","data","catch","defaultState","user","username","password","store","createStore","action","newState","subscribe","getState","dispatch","MainComponent","getDisplayTaskArr","item","indexOf","setDisplayTaskArr","displayTaskArr","getTaskIndex","saveList","printList","Cookie","set","JSON","stringify","onAddTaskCLick","splice","findIndex","unshift","params","$this","getList","list","listString","parse","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef45ba91.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Component } from 'react';\r\n\r\nclass ToolbarComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toolbarParams: this.getEmptyParams(),\r\n            searchTimeout: null,\r\n        }\r\n    }\r\n\r\n    getEmptyParams() {\r\n        return {\r\n            search: '',\r\n            sort: {},\r\n            filter: {\r\n                status: 'all'\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    onSearchChange = ($event) => {\r\n        clearTimeout(this.state.searchTimeout);\r\n        let value = $event.target.value;\r\n        let toolbarParams = { ...this.state.toolbarParams };\r\n        toolbarParams.search = value;\r\n        this.setState({ toolbarParams }, () => {\r\n            this.props.onToolbarParamsChange(this.state.toolbarParams);\r\n        })\r\n    }\r\n\r\n    onFilterChange = ($event) => {\r\n        clearTimeout(this.state.searchTimeout);\r\n        let value = $event.target.value;\r\n        let toolbarParams = { ...this.state.toolbarParams };\r\n        toolbarParams.filter.status = value;\r\n        this.setState({ toolbarParams }, () => {\r\n            this.props.onToolbarParamsChange(this.state.toolbarParams);\r\n        })\r\n    }\r\n\r\n    onSortChange = ($event) => {\r\n        /*\r\n        clearTimeout(this.state.searchTimeout);\r\n        let value = $event.target.value;\r\n        let toolbarParams = { ...this.state.toolbarParams };\r\n        toolbarParams.sort. = value;\r\n        this.setState({ toolbarParams }, () => {\r\n            this.props.onToolbarParamsChange(this.state.toolbarParams);\r\n        })\r\n        */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"toolbar-wrapper row\">\r\n\r\n                {/* ADD */}\r\n                <div className=\"col-12 my-1\">\r\n                    <button className=\"btn btn-dark btn-sm\" disabled={this.props.isFormOpening} onClick={this.props.onAddTaskClick}>\r\n                        <span className=\"fal fa-plus\"></span>\r\n                        <span> Add task </span>\r\n                    </button>\r\n                </div>\r\n\r\n                {/* SEARCH */}\r\n                <div className=\"col-lg-6 my-1\">\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.toolbarParams.search} onChange={this.onSearchChange} placeholder=\"Type key word ...\" />\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-primary\">\r\n                                <span className=\"fal fa-search\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* FILTER &  SORT*/}\r\n                <div className=\"col-lg-6 my-1\">\r\n                    <div className=\"row\">\r\n                        {/* FILTER */}\r\n                        <div className=\"col-6\">\r\n                            <select className=\"form-control\" name=\"status\" value={this.state.toolbarParams.filter.status} onChange={this.onFilterChange}>\r\n                                <option value=\"all\">All status</option>\r\n                                <option value=\"active\">Active</option>\r\n                                <option value=\"hidden\">Hidden</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        {/* SORT */}\r\n                        {/* \r\n                        <div className=\"col-6\">\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"btn btn-light border border-dark dropdown-toggle\" data-toggle=\"dropdown\">Sort</button>\r\n                                <div className=\"dropdown-menu\" >\r\n                                    <button className=\"dropdown-item\">Title a-z</button>\r\n                                    <button className=\"dropdown-item\" >Title z-a</button>\r\n                                    <hr />\r\n                                    <button className=\"dropdown-item\">Active task</button>\r\n                                    <button className=\"dropdown-item\" >Hidden task</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                         */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolbarComponent;","class Helper{\r\n    static getTemplate(){\r\n        return {\r\n            button:{\r\n                status: {\r\n                    active: {\r\n                        classes: 'badge badge-info',\r\n                        content: 'Active',\r\n                    },\r\n                    hidden: {\r\n                        classes: 'badge badge-light',\r\n                        content: 'Hidden',\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static sayHello(){\r\n        alert('hello');\r\n    }\r\n    \r\n    static generateId(){\r\n        let min = 100000000;\r\n        let max = 999999999;\r\n        return Math.floor(Math.random()*(max-min)+min)+'';\r\n    }\r\n}\r\n\r\nexport default Helper;","import { Component } from 'react';\r\nimport './task.component.css';\r\nimport Helper from '../../shared/helpers/Helper';\r\n\r\nclass TaskComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: props.task\r\n        }\r\n    }\r\n\r\n    // TEMPLATE\r\n    getStatusTemplate() {\r\n        return Helper.getTemplate().button.status[this.state.task.status];\r\n    }\r\n\r\n    getTaskTitle = () => {\r\n        let title = this.props.task.title;\r\n        let searchContent = this.props.searchContent;\r\n        if (searchContent) {\r\n            title = title.replace(new RegExp(`(${searchContent})`, 'g'), `<span style=\"background: yellow;\">$1</span>`);\r\n        }\r\n        return title;\r\n    }\r\n\r\n\r\n    // RENDER\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <th scope=\"row\">{this.props.no}</th>\r\n                <td dangerouslySetInnerHTML={{ __html: this.getTaskTitle() }}></td>\r\n                <td><span onClick={() => { this.props.onTaskStatusChange(this.state.task) }} className={`btn-status ${this.getStatusTemplate().classes}`}>{this.getStatusTemplate().content}</span></td>\r\n                <td>\r\n                    <div className=\"d-flex\">\r\n                        <button className=\"btn btn-success w-100 mx-1  btn-sm\" onClick={() => { this.props.onEditTaskClick(this.state.task) }}>\r\n                            <span className=\"fal fa-pencil\" ></span>\r\n                        </button>\r\n                        <button className=\"btn btn-danger w-100 mx-1  btn-sm\" onClick={() => { this.props.onDeleteTaskClick(this.state.task) }}>\r\n                            <span className=\"fal fa-trash-alt\"></span>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskComponent;","import { Component } from 'react';\r\nimport TaskComponent from '../task.component/task.component';\r\n\r\nclass TaskListComponent extends Component {\r\n\r\n    // TASK HTML\r\n    getTaskArrHtml() {\r\n        let htmlArr = this.props.taskArr\r\n            .map((task, index) => {\r\n                return <TaskComponent\r\n                    key={task.id}\r\n                    no={index + 1}\r\n                    task={task}\r\n                    onDeleteTaskClick={this.props.onDeleteTaskClick}\r\n                    onEditTaskClick={this.props.onEditTaskClick}\r\n                    searchContent={this.props.toolbarParams.search}\r\n                    onTaskStatusChange={this.props.onTaskStatusChange}\r\n                ></TaskComponent>\r\n            })\r\n        return htmlArr;\r\n    }\r\n\r\n    getEmptyMsg() {\r\n        return (\r\n            <tr><td colSpan=\"1000\"><div className=\"alert alert-info text-center\" > You do not have any task, yet! </div></td></tr>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"task-list-wrapper\">\r\n                <table className=\"table table-striped\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Status</th>\r\n                            <th className=\"text-center\" width=\"30%\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            (this.props.taskArr?.length > 0)\r\n                                ? this.getTaskArrHtml()\r\n                                : this.getEmptyMsg()\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskListComponent;","import { Component } from 'react';\r\nimport Helper from '../../shared/helpers/Helper';\r\n\r\nclass FormComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: this.props.task,\r\n            formType: (props.task) ? 'edit' : 'add',\r\n            form: {},\r\n        }\r\n        this.state.form = this.getFormValues();\r\n    }\r\n\r\n    getFormValues = () => {\r\n        let formValues;\r\n        if (this.state.formType === 'edit') formValues = this.state.task;\r\n        else formValues = this.getEmptyForm();\r\n        return formValues;\r\n    }\r\n\r\n    getEmptyForm() {\r\n        return {\r\n            id: '',\r\n            title: '',\r\n            status: '',\r\n        }\r\n    }\r\n\r\n    // INPUT CHANGE\r\n    onInputChange = ($event) => {\r\n        let inputName = $event.target.name;\r\n        let inputValue = $event.target.value;\r\n        let form = { ...this.state.form };\r\n        form[inputName] = inputValue;\r\n        this.setState({ form: form })\r\n    }\r\n\r\n    isFormValid() {\r\n        try {\r\n            let formValues = this.state.form;\r\n            return (\r\n                formValues.title.trim() !== '' &&\r\n                ['active', 'hidden'].includes(formValues.status)\r\n            )\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onSubmit= ($event) => {\r\n        $event.preventDefault();\r\n        if (this.isFormValid()) {\r\n            if (this.state.formType === 'add') {\r\n                let task = this.state.form;\r\n                task.id = Helper.generateId();\r\n                this.props.onAddTask(task);\r\n            }else{\r\n                this.props.onEditTask(this.state.form);\r\n            }\r\n        }\r\n        if (this.state.formType === 'add') this.setState({form: this.getEmptyForm()});\r\n    }\r\n\r\n    // RENDER\r\n    render() {\r\n        return (\r\n            <div className=\"form-wrapper\">\r\n                <p className=\"bg-info text-light p-2 rounded\">{(this.state.formType === 'edit') ? 'Edit task' : 'Add task'}</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"title\" placeholder=\"Title\" value={this.state.form.title} onChange={this.onInputChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control\" name=\"status\" value={this.state.form.status} onChange={this.onInputChange}>\r\n                            <option value=\"\" disabled>Choose status</option>\r\n                            <option value=\"active\">Active</option>\r\n                            <option value=\"hidden\">Hidden</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group text-right\">\r\n                        <div className=\"btn-group btn-group-sm\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                disabled={!this.isFormValid()}\r\n                            >{(this.state.formType === 'edit' ? 'Save' : 'Add')}</button>\r\n                            <button className=\"btn btn-warning ml-1\" onClick={this.props.onFormCancelClick}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormComponent;","import { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass TitleComponent extends Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:3000/api/posts')\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"title-wrapper row\">\r\n                <div className=\"col-12\">\r\n        <h3 className=\"text-center\">{this.props.title}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleComponent;","import { createStore } from 'redux'\r\n\r\nlet defaultState = {\r\n    user: {\r\n        username: 'peteranh',\r\n        password: '123456',\r\n    }\r\n}\r\n\r\nfunction counterReducer(state = defaultState, action) {\r\n    let newState = { ...state };\r\n    switch (action.type) {\r\n        case 'change-user':\r\n            newState.user = action.user;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\n\r\n// create store\r\nlet store = createStore(counterReducer)\r\nstore.subscribe(()=>{\r\n    console.log(store.getState());\r\n})\r\n\r\n// default state\r\nconsole.log('default', store.getState());\r\n\r\n// dispatch action\r\nlet action = {\r\n    type: 'change-user',\r\n    user: {\r\n        username: 'hongtruc',\r\n        password: 'abcdef',\r\n    }\r\n}\r\nstore.dispatch(action);\r\n// new state\r\nconsole.log('new', store.getState());\r\n","import Toolbar from \"./components/toolbar.component/toolbar.component\";\r\nimport TaskList from \"./components/task_list.component/task_list.component\";\r\nimport FormComponent from \"./components/form.component/form.component\";\r\nimport TitleComponent from \"./components/title.component/title.component\";\r\nimport React from 'react';\r\nimport Cookie from 'js-cookie';\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport './shared/defines/demo'\r\n\r\nclass MainComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let $this = this;\r\n        this.state = {\r\n            isFormOpening: false,\r\n            task: null,\r\n\r\n            // tasks\r\n            taskArr: this.getList(),\r\n            get displayTaskArr() {\r\n                return $this.getDisplayTaskArr([...this.taskArr]);\r\n            },\r\n\r\n            // params\r\n            toolbarParams: {\r\n                sort: {},\r\n                search: \"\",\r\n                filter: {\r\n                    status: 'all'\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getDisplayTaskArr = (taskArr) => {\r\n        let toolbarParams = this.state.toolbarParams;\r\n        if (toolbarParams.search.trim() !== '' || toolbarParams.filter.status !== 'all') {\r\n            taskArr = taskArr.filter((item) => {\r\n                return (\r\n                    item.title.indexOf(toolbarParams.search) >= 0 &&\r\n                    (item.status === toolbarParams.filter.status || toolbarParams.filter.status === 'all')\r\n                );\r\n            })\r\n        }\r\n        return taskArr;\r\n    }\r\n\r\n    setDisplayTaskArr = () => {\r\n        this.setState({ displayTaskArr: this.getDisplayTaskArr(this.state.taskArr) });\r\n    }\r\n\r\n    onTaskStatusChange = (task) => {\r\n        let index = this.getTaskIndex(task);\r\n        let taskArr = [...this.state.taskArr];\r\n        task.status = (task.status === 'active') ? 'hidden' : 'active';\r\n        taskArr[index] = task;\r\n        this.setState({ taskArr }, () => {\r\n            this.saveList();\r\n        });\r\n    }\r\n\r\n    printList = () => {\r\n    }\r\n\r\n    getList() {\r\n        let list = [];\r\n        let listString = Cookie.get('taskArr');\r\n        if (listString) {\r\n            try {\r\n                list = JSON.parse(listString) || [];\r\n            } catch (e) { }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    saveList = () => {\r\n        Cookie.set('taskArr', JSON.stringify(this.state.taskArr));\r\n    }\r\n\r\n    // FORM\r\n    onAddTaskCLick = () => {\r\n        this.setState({\r\n            isFormOpening: true,\r\n        })\r\n    }\r\n\r\n\r\n    onEditTaskClick = (task) => {\r\n        this.setState({\r\n            isFormOpening: true,\r\n            task,\r\n        });\r\n    }\r\n\r\n    onDeleteTaskClick = (task) => {\r\n        let taskArr = [...this.state.taskArr];\r\n        let index = this.getTaskIndex(task);\r\n        taskArr.splice(index, 1);\r\n        this.setState({ taskArr, }, () => {\r\n            this.saveList();\r\n            this.setDisplayTaskArr();\r\n        })\r\n        if (this.state.isFormOpening && this.state.task?.id === task.id) {\r\n            this.setState({ isFormOpening: false, task: null, })\r\n        }\r\n    }\r\n\r\n    onFormCancelClick = () => {\r\n        this.setState({\r\n            isFormOpening: false,\r\n            task: null,\r\n        })\r\n    }\r\n\r\n    getTaskIndex = (task) => {\r\n        let taskArr = [...this.state.taskArr];\r\n        let index = taskArr.findIndex((item) => {\r\n            return (item.id === task.id);\r\n        })\r\n        return index;\r\n    }\r\n\r\n    // FORM ACTIONS\r\n    onAddTask = (task) => {\r\n        let taskArr = [...this.state.taskArr];\r\n        taskArr.unshift(task);\r\n        this.setState({ taskArr, }, () => {\r\n            this.saveList();\r\n            this.setDisplayTaskArr();\r\n        })\r\n    }\r\n\r\n    onEditTask = (task) => {\r\n        let taskArr = [...this.state.taskArr];\r\n        let index = taskArr.findIndex((item) => {\r\n            return (item.id === task.id);\r\n        })\r\n        taskArr.splice(index, 1, task);\r\n        this.setState({ taskArr, }, () => {\r\n            this.saveList();\r\n            this.setDisplayTaskArr();\r\n        })\r\n    }\r\n\r\n    onToolbarParamsChange = (params) => {\r\n        this.setState({\r\n            toolbarParams: params\r\n        }, () => {\r\n            this.setDisplayTaskArr();\r\n        })\r\n    }\r\n\r\n    // RENDER\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"mai-wrapper\">\r\n                    <div className=\"container\">\r\n\r\n                        {/* TITLE */}\r\n                        <div className=\"my-4\">\r\n                            <TitleComponent title=\"My task (ReactJS)\"></TitleComponent>\r\n                        </div>\r\n\r\n                        {/* TOOLBAR */}\r\n                        <div>\r\n                            <Toolbar\r\n                                isFormOpening={this.state.isFormOpening}\r\n                                onAddTaskClick={this.onAddTaskCLick}\r\n                                onToolbarParamsChange={this.onToolbarParamsChange}\r\n                            ></Toolbar>\r\n                        </div>\r\n\r\n                        {/* TASK LIST */}\r\n                        <div className=\"my-3\">\r\n                            <div className=\"row\">\r\n\r\n                                {/* FORM */}\r\n\r\n                                {\r\n                                    (this.state.isFormOpening)\r\n                                        ?\r\n                                        <div className=\"col-lg-4\">\r\n                                            <FormComponent\r\n                                                key={this.state.task?.id}\r\n                                                onFormCancelClick={this.onFormCancelClick}\r\n                                                onAddTask={this.onAddTask}\r\n                                                onEditTask={this.onEditTask}\r\n                                                task={this.state.task}\r\n                                            ></FormComponent>\r\n                                        </div>\r\n                                        : \"\"\r\n                                }\r\n\r\n                                {/* LIST */}\r\n                                <div className={(this.state.isFormOpening) ? \"col-lg-8\" : \"col-lg-12\"}>\r\n                                    <TaskList\r\n                                        //key={Date.now()}\r\n                                        taskArr={this.state.displayTaskArr}\r\n                                        toolbarParams={this.state.toolbarParams}\r\n                                        onDeleteTaskClick={this.onDeleteTaskClick}\r\n                                        onEditTaskClick={this.onEditTaskClick}\r\n                                        onTaskStatusChange={this.onTaskStatusChange}\r\n                                    ></TaskList>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MainComponent from './to_do_list/main.component';\n\nReactDOM.render(\n    <React.StrictMode>\n        <MainComponent></MainComponent>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}